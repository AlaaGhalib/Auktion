@model IEnumerable<Auktion.Models.Auctions.AuctionVm>

@{
ViewData["Title"] = "Index";

// Get the logged-in user's ID
var loggedInUserId = ViewBag.userId;
var auctionOwners = ViewBag.AuctionOwners as Dictionary<int, string>;
}

<h1>Index</h1>

<p>
    <a asp-action="Create" class="text-primary" style="text-decoration: underline;">Create New Auction</a>
</p>

<p>
    <a asp-action="UserBids" class="text-primary" style="text-decoration: underline;">View Your Bids</a>
</p>

<p>
    <a asp-action="UserWonAuctions" class="text-primary" style="text-decoration: underline;">View Your Won Auctions</a>
</p>

<table class="table">
    <thead>
    <tr>
        <th>@Html.DisplayNameFor(model => model.Title)</th>
        <th>@Html.DisplayNameFor(model => model.Description)</th>
        <th>@Html.DisplayNameFor(model => model.StartingPrice)</th>
        <th>@Html.DisplayNameFor(model => model.StartTime)</th>
        <th>@Html.DisplayNameFor(model => model.EndTime)</th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
    var ownerId = auctionOwners != null && auctionOwners.ContainsKey(item.AuctionId)
    ? auctionOwners[item.AuctionId]
    : null;

    <tr>
        <td>@Html.DisplayFor(modelItem => item.Title)</td>
        <td>@Html.DisplayFor(modelItem => item.Description)</td>
        <td>@Html.DisplayFor(modelItem => item.StartingPrice)</td>
        <td>@Html.DisplayFor(modelItem => item.StartTime)</td>
        <td>@Html.DisplayFor(modelItem => item.EndTime)</td>
        <td>
            @if (ownerId == loggedInUserId)
            {
            <a asp-action="Edit" asp-route-id="@item.AuctionId">Edit</a>
            @: |
            }
            <a asp-action="Details" asp-route-id="@item.AuctionId">Details</a>

        </td>
    </tr>
    }
    </tbody>
</table>
